# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AybxqAokriEZ_zOmOy0Q_ll-tMRnAFdq
"""



# =============================
# Cálculo de métricas de avaliação
# =============================

def metrics_from_confusion(tp, tn, fp, fn):
    """Calcula métricas de avaliação a partir da matriz de confusão."""

    def safe_div(a, b):
        return a / b if b != 0 else 0.0

    sensibilidade  = safe_div(tp, tp + fn)             # VP / (VP + FN)
    especificidade = safe_div(tn, fp + tn)            # VN / (FP + VN)
    acuracia       = safe_div(tp + tn, tp+tn+fp+fn)   # (VP + VN) / N
    precisao       = safe_div(tp, tp + fp)            # VP / (VP + FP)
    f1             = safe_div(2 * (precisao * sensibilidade),
                              precisao + sensibilidade)  # 2*(P*S)/(P+S)

    return {
        "Acurácia": acuracia,
        "Sensibilidade (Recall)": sensibilidade,
        "Especificidade": especificidade,
        "Precisão": precisao,
        "F1-score": f1
    }

# =============================
# Exemplo de uso
# =============================

TP, TN, FP, FN = 60, 58, 13, 5
resultados = metrics_from_confusion(TP, TN, FP, FN)

print("Resultados das métricas:\n")
for nome, valor in resultados.items():
    print(f"{nome}: {valor:.4f}")